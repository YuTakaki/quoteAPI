{"version":3,"sources":["components/header.js","components/instruction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","random","setRandom","randomRef","useRef","colors","randomNumber","num","Math","ceil","useEffect","current","style","backgroundColor","length","a","axios","get","randomQuote","data","className","ref","quote","author","class","Instruction","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAmCeA,EAhCA,WACX,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAYC,mBACZC,EAAS,CAAC,UAAW,UAAW,UAAW,WAI3CC,EAAe,SAACC,GAClB,OAAOC,KAAKC,KAAKD,KAAKP,SAAWM,IAUrC,OAPAG,qBAAU,WACNP,EAAUQ,QAAQC,MAAMC,gBAPCR,EAAOC,EAAaD,EAAOS,OAAS,IAQ7D,sBAAC,4BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,uBADvC,OACSC,EADT,OAEGhB,EAAUgB,EAAYC,MAFzB,0CAAD,KAID,IAEC,0BAASC,UAAU,cAAcC,IAAKlB,EAAtC,UACI,+CACA,sBAAKiB,UAAU,QAAf,UACA,mCAAMnB,EAAOqB,MAAb,OACA,kCAAKrB,EAAOsB,aAEZ,qBAAKH,UAAU,aAAf,SACA,mBAAGI,MAAM,kCCqBNC,EAhDK,WAChB,OACI,0BAASL,UAAU,cAAnB,UACA,oCACE,wDACA,+DAEF,oCACE,qDACA,iEAEF,oCACE,yDACA,uEAEF,oCACE,8DACA,0DAEF,oCACE,oBAAIA,UAAU,OAAd,kCACA,oEAEF,oCACE,oBAAIA,UAAU,OAAd,8BACA,yEAEF,oCACE,oBAAIA,UAAU,SAAd,oCACA,uDAEF,oCACE,oBAAIA,UAAU,SAAd,6CACA,wEAEF,oCACE,oBAAIA,UAAU,QAAd,mCACA,mEAEF,oCACE,oBAAIA,UAAU,QAAd,4CACA,sEC3BKM,G,MAXH,WAEV,OACE,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,SCESO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9cbbd663.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Header = () => {\r\n    const [random, setRandom] = useState({});\r\n    const randomRef = useRef();\r\n    const colors = ['#62bccc', '#337ac0', '#ee9323', '#F2b922'];\r\n\r\n    const getRandomColor = () => colors[randomNumber(colors.length - 1)]\r\n\r\n    const randomNumber = (num) => {\r\n        return Math.ceil(Math.random() * num);\r\n\r\n    }\r\n    useEffect(() => {\r\n        randomRef.current.style.backgroundColor = getRandomColor();\r\n        (async() => {\r\n            const randomQuote = await axios.get('/api/quotes/random/');\r\n            setRandom(randomQuote.data)\r\n        })();\r\n    }, [])\r\n    return (\r\n        <section className='randomQuote' ref={randomRef}>\r\n            <header>QUOTE API</header>\r\n            <div className='quote'>\r\n            <h1>\"{random.quote}\"</h1>\r\n            <p>-{random.author}</p>\r\n            </div>\r\n            <div className='scrollDown'>\r\n            <i class=\"fa fa-angle-double-down\"></i>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Instruction = () => {\r\n    return (\r\n        <section className='instruction'>\r\n        <section>\r\n          <h2>GET /api/quotes/random</h2>\r\n          <p>Will get you a random quote</p>\r\n        </section>\r\n        <section>\r\n          <h2>GET /api/quotes/:id</h2>\r\n          <p>Will get you a specific quote</p>\r\n        </section>\r\n        <section>\r\n          <h2>GET /api/user/:idOrName</h2>\r\n          <p>Will get you all quotes of the user</p>\r\n        </section>\r\n        <section>\r\n          <h2>GET /api/users/:idOrUsername</h2>\r\n          <p>will get the user data</p>\r\n        </section>\r\n        <section>\r\n          <h2 className='post'>POST /api/quotes/:id</h2>\r\n          <p>Will add a quote in the database</p>\r\n        </section>\r\n        <section>\r\n          <h2 className='post'>POST /api/users/</h2>\r\n          <p>will add another user in the database</p>\r\n        </section>\r\n        <section>\r\n          <h2 className='delete'>DELETE /api/quotes/:id</h2>\r\n          <p>Will delete a quote</p>\r\n        </section>\r\n        <section>\r\n          <h2 className='delete'>DELETE /api/users/:idOrUsername</h2>\r\n          <p>will delete the user in the database</p>\r\n        </section>\r\n        <section>\r\n          <h2 className='patch'>PATCH /api/quotes/:id</h2>\r\n          <p>Will update the quote partially</p>\r\n        </section>\r\n        <section>\r\n          <h2 className='patch'>PATCH /api/users/:idOrUsername</h2>\r\n          <p>will update the user partially</p>\r\n        </section>\r\n\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default Instruction\r\n","\nimport Header from './components/header';\nimport Instruction from './components/instruction';\nimport './styles/random.scss';\n\nconst App = () => {\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <Instruction />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}